// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: calque.proto

package proto

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FlowRequest represents a request to execute a flow
type FlowRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Protocol version for compatibility (currently 1)
	Version int32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Name of the flow to execute (required)
	FlowName string `protobuf:"bytes,2,opt,name=flow_name,json=flowName,proto3" json:"flow_name,omitempty"`
	// Input data for the flow (required)
	Input string `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	// Additional metadata for the flow execution
	Metadata      map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlowRequest) Reset() {
	*x = FlowRequest{}
	mi := &file_calque_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowRequest) ProtoMessage() {}

func (x *FlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calque_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowRequest.ProtoReflect.Descriptor instead.
func (*FlowRequest) Descriptor() ([]byte, []int) {
	return file_calque_proto_rawDescGZIP(), []int{0}
}

func (x *FlowRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FlowRequest) GetFlowName() string {
	if x != nil {
		return x.FlowName
	}
	return ""
}

func (x *FlowRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *FlowRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// FlowResponse represents the response from executing a flow
type FlowResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Protocol version for compatibility (matches request version)
	Version int32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Output data from the flow execution
	Output string `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	// Additional metadata from the flow execution
	Metadata map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Whether the flow execution was successful
	Success bool `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	// Error message if the flow execution failed
	ErrorMessage  string `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlowResponse) Reset() {
	*x = FlowResponse{}
	mi := &file_calque_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowResponse) ProtoMessage() {}

func (x *FlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calque_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowResponse.ProtoReflect.Descriptor instead.
func (*FlowResponse) Descriptor() ([]byte, []int) {
	return file_calque_proto_rawDescGZIP(), []int{1}
}

func (x *FlowResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FlowResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *FlowResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FlowResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FlowResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// StreamingFlowRequest represents a streaming request to execute a flow
type StreamingFlowRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the flow to execute (required)
	FlowName string `protobuf:"bytes,1,opt,name=flow_name,json=flowName,proto3" json:"flow_name,omitempty"`
	// Input data for the flow (required)
	Input string `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	// Additional metadata for the flow execution
	Metadata      map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingFlowRequest) Reset() {
	*x = StreamingFlowRequest{}
	mi := &file_calque_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingFlowRequest) ProtoMessage() {}

func (x *StreamingFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calque_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingFlowRequest.ProtoReflect.Descriptor instead.
func (*StreamingFlowRequest) Descriptor() ([]byte, []int) {
	return file_calque_proto_rawDescGZIP(), []int{2}
}

func (x *StreamingFlowRequest) GetFlowName() string {
	if x != nil {
		return x.FlowName
	}
	return ""
}

func (x *StreamingFlowRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *StreamingFlowRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// StreamingFlowResponse represents a streaming response from executing a flow
type StreamingFlowResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output data from the flow execution
	Output string `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	// Additional metadata from the flow execution
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Whether the flow execution was successful
	Success bool `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	// Error message if the flow execution failed
	ErrorMessage string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Whether this is the final response in the stream
	IsFinal       bool `protobuf:"varint,5,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamingFlowResponse) Reset() {
	*x = StreamingFlowResponse{}
	mi := &file_calque_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingFlowResponse) ProtoMessage() {}

func (x *StreamingFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calque_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingFlowResponse.ProtoReflect.Descriptor instead.
func (*StreamingFlowResponse) Descriptor() ([]byte, []int) {
	return file_calque_proto_rawDescGZIP(), []int{3}
}

func (x *StreamingFlowResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *StreamingFlowResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StreamingFlowResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StreamingFlowResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *StreamingFlowResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

// AIRequest represents a request to an AI service
type AIRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The prompt or message to send to the AI model (required)
	Prompt string `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	// Parameters for the AI model (temperature, max_tokens, etc.)
	Parameters map[string]string `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// List of tools available to the AI model
	Tools         []string `protobuf:"bytes,3,rep,name=tools,proto3" json:"tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIRequest) Reset() {
	*x = AIRequest{}
	mi := &file_calque_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIRequest) ProtoMessage() {}

func (x *AIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calque_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIRequest.ProtoReflect.Descriptor instead.
func (*AIRequest) Descriptor() ([]byte, []int) {
	return file_calque_proto_rawDescGZIP(), []int{4}
}

func (x *AIRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *AIRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *AIRequest) GetTools() []string {
	if x != nil {
		return x.Tools
	}
	return nil
}

// AIResponse represents a response from an AI service
type AIResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The response text from the AI model
	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	// Tool calls made by the AI model
	ToolCalls []*ToolCall `protobuf:"bytes,2,rep,name=tool_calls,json=toolCalls,proto3" json:"tool_calls,omitempty"`
	// Additional metadata from the AI service
	Metadata      map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIResponse) Reset() {
	*x = AIResponse{}
	mi := &file_calque_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIResponse) ProtoMessage() {}

func (x *AIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calque_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIResponse.ProtoReflect.Descriptor instead.
func (*AIResponse) Descriptor() ([]byte, []int) {
	return file_calque_proto_rawDescGZIP(), []int{5}
}

func (x *AIResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *AIResponse) GetToolCalls() []*ToolCall {
	if x != nil {
		return x.ToolCalls
	}
	return nil
}

func (x *AIResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ToolCall represents a tool call in the AI response
type ToolCall struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the tool to call (required)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Arguments for the tool call (JSON string)
	Arguments string `protobuf:"bytes,2,opt,name=arguments,proto3" json:"arguments,omitempty"`
	// Unique identifier for this tool call
	Id            string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolCall) Reset() {
	*x = ToolCall{}
	mi := &file_calque_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolCall) ProtoMessage() {}

func (x *ToolCall) ProtoReflect() protoreflect.Message {
	mi := &file_calque_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolCall.ProtoReflect.Descriptor instead.
func (*ToolCall) Descriptor() ([]byte, []int) {
	return file_calque_proto_rawDescGZIP(), []int{6}
}

func (x *ToolCall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ToolCall) GetArguments() string {
	if x != nil {
		return x.Arguments
	}
	return ""
}

func (x *ToolCall) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// MemoryRequest represents a request to a memory service
type MemoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Operation to perform: "get", "set", "delete", "list", "exists" (required)
	Operation string `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	// Key for the memory operation (required for get, set, delete, exists)
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Value for the memory operation (required for set)
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// Additional metadata (TTL, namespace, etc.)
	Metadata      map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryRequest) Reset() {
	*x = MemoryRequest{}
	mi := &file_calque_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryRequest) ProtoMessage() {}

func (x *MemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calque_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryRequest.ProtoReflect.Descriptor instead.
func (*MemoryRequest) Descriptor() ([]byte, []int) {
	return file_calque_proto_rawDescGZIP(), []int{7}
}

func (x *MemoryRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *MemoryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MemoryRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MemoryRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// MemoryResponse represents a response from a memory service
type MemoryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the memory operation was successful
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Value retrieved from memory (for get operations)
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Error message if the operation failed
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Additional metadata from the memory service
	Metadata      map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryResponse) Reset() {
	*x = MemoryResponse{}
	mi := &file_calque_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryResponse) ProtoMessage() {}

func (x *MemoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calque_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryResponse.ProtoReflect.Descriptor instead.
func (*MemoryResponse) Descriptor() ([]byte, []int) {
	return file_calque_proto_rawDescGZIP(), []int{8}
}

func (x *MemoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MemoryResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MemoryResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MemoryResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ToolRequest represents a request to execute a tool
type ToolRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the tool to execute (required)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Arguments for the tool execution (JSON string)
	Arguments string `protobuf:"bytes,2,opt,name=arguments,proto3" json:"arguments,omitempty"`
	// Unique identifier for this tool request
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// Additional metadata for the tool execution
	Metadata      map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolRequest) Reset() {
	*x = ToolRequest{}
	mi := &file_calque_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolRequest) ProtoMessage() {}

func (x *ToolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calque_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolRequest.ProtoReflect.Descriptor instead.
func (*ToolRequest) Descriptor() ([]byte, []int) {
	return file_calque_proto_rawDescGZIP(), []int{9}
}

func (x *ToolRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ToolRequest) GetArguments() string {
	if x != nil {
		return x.Arguments
	}
	return ""
}

func (x *ToolRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ToolRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ToolResponse represents a response from tool execution
type ToolResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the tool execution was successful
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Result of the tool execution
	Result string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	// Error message if the tool execution failed
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Additional metadata from the tool execution
	Metadata      map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolResponse) Reset() {
	*x = ToolResponse{}
	mi := &file_calque_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolResponse) ProtoMessage() {}

func (x *ToolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calque_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolResponse.ProtoReflect.Descriptor instead.
func (*ToolResponse) Descriptor() ([]byte, []int) {
	return file_calque_proto_rawDescGZIP(), []int{10}
}

func (x *ToolResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ToolResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ToolResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ToolResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_calque_proto protoreflect.FileDescriptor

const file_calque_proto_rawDesc = "" +
	"\n" +
	"\fcalque.proto\x12\x06calque\x1a\x1bbuf/validate/validate.proto\"\x9c\x02\n" +
	"\vFlowRequest\x12#\n" +
	"\aversion\x18\x01 \x01(\x05B\t\xbaH\x06\x1a\x04\x18\n" +
	"(\x01R\aversion\x128\n" +
	"\tflow_name\x18\x02 \x01(\tB\x1b\xbaH\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\bflowName\x12!\n" +
	"\x05input\x18\x03 \x01(\tB\v\xbaH\br\x06\x10\x00\x18\xc0\x84=R\x05input\x12N\n" +
	"\bmetadata\x18\x04 \x03(\v2!.calque.FlowRequest.MetadataEntryB\x0f\xbaH\f\x9a\x01\t\x102*\x05r\x03\x18\xe8\aR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfc\x01\n" +
	"\fFlowResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x05R\aversion\x12\x16\n" +
	"\x06output\x18\x02 \x01(\tR\x06output\x12>\n" +
	"\bmetadata\x18\x03 \x03(\v2\".calque.FlowResponse.MetadataEntryR\bmetadata\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xce\x01\n" +
	"\x14StreamingFlowRequest\x12\x1b\n" +
	"\tflow_name\x18\x01 \x01(\tR\bflowName\x12\x14\n" +
	"\x05input\x18\x02 \x01(\tR\x05input\x12F\n" +
	"\bmetadata\x18\x03 \x03(\v2*.calque.StreamingFlowRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8f\x02\n" +
	"\x15StreamingFlowResponse\x12\x16\n" +
	"\x06output\x18\x01 \x01(\tR\x06output\x12G\n" +
	"\bmetadata\x18\x02 \x03(\v2+.calque.StreamingFlowResponse.MetadataEntryR\bmetadata\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12\x19\n" +
	"\bis_final\x18\x05 \x01(\bR\aisFinal\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xea\x01\n" +
	"\tAIRequest\x12#\n" +
	"\x06prompt\x18\x01 \x01(\tB\v\xbaH\br\x06\x10\x01\x18\xa0\x8d\x06R\x06prompt\x12Q\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v2!.calque.AIRequest.ParametersEntryB\x0e\xbaH\v\x9a\x01\b\x10\x14*\x04r\x02\x18dR\n" +
	"parameters\x12&\n" +
	"\x05tools\x18\x03 \x03(\tB\x10\xbaH\r\x92\x01\n" +
	"\x102\"\x06r\x04\x10\x01\x18dR\x05tools\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd4\x01\n" +
	"\n" +
	"AIResponse\x12\x1a\n" +
	"\bresponse\x18\x01 \x01(\tR\bresponse\x12/\n" +
	"\n" +
	"tool_calls\x18\x02 \x03(\v2\x10.calque.ToolCallR\ttoolCalls\x12<\n" +
	"\bmetadata\x18\x03 \x03(\v2 .calque.AIResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"L\n" +
	"\bToolCall\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\targuments\x18\x02 \x01(\tR\targuments\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\"\xb6\x02\n" +
	"\rMemoryRequest\x12C\n" +
	"\toperation\x18\x01 \x01(\tB%\xbaH\"r R\x03getR\x03setR\x06deleteR\x04listR\x06existsR\toperation\x120\n" +
	"\x03key\x18\x02 \x01(\tB\x1e\xbaH\x1br\x19\x10\x01\x18\xf4\x032\x12^[a-zA-Z0-9_./-]+$R\x03key\x12\x1f\n" +
	"\x05value\x18\x03 \x01(\tB\t\xbaH\x06r\x04\x18\xc0\x84=R\x05value\x12P\n" +
	"\bmetadata\x18\x04 \x03(\v2#.calque.MemoryRequest.MetadataEntryB\x0f\xbaH\f\x9a\x01\t\x10\x14*\x05r\x03\x18\xe8\aR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe4\x01\n" +
	"\x0eMemoryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12@\n" +
	"\bmetadata\x18\x04 \x03(\v2$.calque.MemoryResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa1\x02\n" +
	"\vToolRequest\x12/\n" +
	"\x04name\x18\x01 \x01(\tB\x1b\xbaH\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x04name\x12'\n" +
	"\targuments\x18\x02 \x01(\tB\t\xbaH\x06r\x04\x18\xa0\x8d\x06R\targuments\x12+\n" +
	"\x02id\x18\x03 \x01(\tB\x1b\xbaH\x18r\x16\x10\x01\x18d2\x10^[a-zA-Z0-9_-]+$R\x02id\x12N\n" +
	"\bmetadata\x18\x04 \x03(\v2!.calque.ToolRequest.MetadataEntryB\x0f\xbaH\f\x9a\x01\t\x10\x14*\x05r\x03\x18\xe8\aR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe2\x01\n" +
	"\fToolResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06result\x18\x02 \x01(\tR\x06result\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12>\n" +
	"\bmetadata\x18\x04 \x03(\v2\".calque.ToolResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\x96\x01\n" +
	"\vFlowService\x128\n" +
	"\vExecuteFlow\x12\x13.calque.FlowRequest\x1a\x14.calque.FlowResponse\x12M\n" +
	"\n" +
	"StreamFlow\x12\x1c.calque.StreamingFlowRequest\x1a\x1d.calque.StreamingFlowResponse(\x010\x012q\n" +
	"\tAIService\x12-\n" +
	"\x04Chat\x12\x11.calque.AIRequest\x1a\x12.calque.AIResponse\x125\n" +
	"\n" +
	"StreamChat\x12\x11.calque.AIRequest\x1a\x12.calque.AIResponse0\x012O\n" +
	"\rMemoryService\x12>\n" +
	"\rProcessMemory\x12\x15.calque.MemoryRequest\x1a\x16.calque.MemoryResponse2\x87\x01\n" +
	"\fToolsService\x128\n" +
	"\vExecuteTool\x12\x13.calque.ToolRequest\x1a\x14.calque.ToolResponse\x12=\n" +
	"\fExecuteTools\x12\x13.calque.ToolRequest\x1a\x14.calque.ToolResponse(\x010\x01B&Z$github.com/calque-ai/go-calque/protob\x06proto3"

var (
	file_calque_proto_rawDescOnce sync.Once
	file_calque_proto_rawDescData []byte
)

func file_calque_proto_rawDescGZIP() []byte {
	file_calque_proto_rawDescOnce.Do(func() {
		file_calque_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_calque_proto_rawDesc), len(file_calque_proto_rawDesc)))
	})
	return file_calque_proto_rawDescData
}

var file_calque_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_calque_proto_goTypes = []any{
	(*FlowRequest)(nil),           // 0: calque.FlowRequest
	(*FlowResponse)(nil),          // 1: calque.FlowResponse
	(*StreamingFlowRequest)(nil),  // 2: calque.StreamingFlowRequest
	(*StreamingFlowResponse)(nil), // 3: calque.StreamingFlowResponse
	(*AIRequest)(nil),             // 4: calque.AIRequest
	(*AIResponse)(nil),            // 5: calque.AIResponse
	(*ToolCall)(nil),              // 6: calque.ToolCall
	(*MemoryRequest)(nil),         // 7: calque.MemoryRequest
	(*MemoryResponse)(nil),        // 8: calque.MemoryResponse
	(*ToolRequest)(nil),           // 9: calque.ToolRequest
	(*ToolResponse)(nil),          // 10: calque.ToolResponse
	nil,                           // 11: calque.FlowRequest.MetadataEntry
	nil,                           // 12: calque.FlowResponse.MetadataEntry
	nil,                           // 13: calque.StreamingFlowRequest.MetadataEntry
	nil,                           // 14: calque.StreamingFlowResponse.MetadataEntry
	nil,                           // 15: calque.AIRequest.ParametersEntry
	nil,                           // 16: calque.AIResponse.MetadataEntry
	nil,                           // 17: calque.MemoryRequest.MetadataEntry
	nil,                           // 18: calque.MemoryResponse.MetadataEntry
	nil,                           // 19: calque.ToolRequest.MetadataEntry
	nil,                           // 20: calque.ToolResponse.MetadataEntry
}
var file_calque_proto_depIdxs = []int32{
	11, // 0: calque.FlowRequest.metadata:type_name -> calque.FlowRequest.MetadataEntry
	12, // 1: calque.FlowResponse.metadata:type_name -> calque.FlowResponse.MetadataEntry
	13, // 2: calque.StreamingFlowRequest.metadata:type_name -> calque.StreamingFlowRequest.MetadataEntry
	14, // 3: calque.StreamingFlowResponse.metadata:type_name -> calque.StreamingFlowResponse.MetadataEntry
	15, // 4: calque.AIRequest.parameters:type_name -> calque.AIRequest.ParametersEntry
	6,  // 5: calque.AIResponse.tool_calls:type_name -> calque.ToolCall
	16, // 6: calque.AIResponse.metadata:type_name -> calque.AIResponse.MetadataEntry
	17, // 7: calque.MemoryRequest.metadata:type_name -> calque.MemoryRequest.MetadataEntry
	18, // 8: calque.MemoryResponse.metadata:type_name -> calque.MemoryResponse.MetadataEntry
	19, // 9: calque.ToolRequest.metadata:type_name -> calque.ToolRequest.MetadataEntry
	20, // 10: calque.ToolResponse.metadata:type_name -> calque.ToolResponse.MetadataEntry
	0,  // 11: calque.FlowService.ExecuteFlow:input_type -> calque.FlowRequest
	2,  // 12: calque.FlowService.StreamFlow:input_type -> calque.StreamingFlowRequest
	4,  // 13: calque.AIService.Chat:input_type -> calque.AIRequest
	4,  // 14: calque.AIService.StreamChat:input_type -> calque.AIRequest
	7,  // 15: calque.MemoryService.ProcessMemory:input_type -> calque.MemoryRequest
	9,  // 16: calque.ToolsService.ExecuteTool:input_type -> calque.ToolRequest
	9,  // 17: calque.ToolsService.ExecuteTools:input_type -> calque.ToolRequest
	1,  // 18: calque.FlowService.ExecuteFlow:output_type -> calque.FlowResponse
	3,  // 19: calque.FlowService.StreamFlow:output_type -> calque.StreamingFlowResponse
	5,  // 20: calque.AIService.Chat:output_type -> calque.AIResponse
	5,  // 21: calque.AIService.StreamChat:output_type -> calque.AIResponse
	8,  // 22: calque.MemoryService.ProcessMemory:output_type -> calque.MemoryResponse
	10, // 23: calque.ToolsService.ExecuteTool:output_type -> calque.ToolResponse
	10, // 24: calque.ToolsService.ExecuteTools:output_type -> calque.ToolResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_calque_proto_init() }
func file_calque_proto_init() {
	if File_calque_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_calque_proto_rawDesc), len(file_calque_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_calque_proto_goTypes,
		DependencyIndexes: file_calque_proto_depIdxs,
		MessageInfos:      file_calque_proto_msgTypes,
	}.Build()
	File_calque_proto = out.File
	file_calque_proto_goTypes = nil
	file_calque_proto_depIdxs = nil
}
